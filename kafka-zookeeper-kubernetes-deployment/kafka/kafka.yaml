apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka
  name: kafka-0
spec:
  ports:
    - port: 9092
      protocol: TCP
      targetPort: 30091
#      nodePort: 30091
  selector:
    app: kafka
    run: kafka-0
#  type: NodePort
  clusterIP: None
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka
  name: kafka-1
spec:
  ports:
    - port: 9093
      protocol: TCP
      targetPort: 30092
#      nodePort: 30092
  selector:
    app: kafka
    run: kafka-1
#  type: NodePort
  clusterIP: None
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka
  name: kafka-2
spec:
  ports:
    - port: 9094
      protocol: TCP
      targetPort: 30093
#      nodePort: 30093
  selector:
    app: kafka
    run: kafka-2
#  type: NodePort
  clusterIP: None
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-d-0
  labels:
    app: kafka
spec:
  serviceName: kafka-0
  replicas: 1
  selector:
    matchLabels:
      app: kafka
      run: kafka-0
  template:
    metadata:
      labels:
        app: kafka
        run: kafka-0
    spec:
      terminationGracePeriodSeconds: 10
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - kafka
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: kafka-container
          image: 'bitnami/kafka:latest'
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 30091
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka/data
#      volumes:
#        name: kafka-data
#        emptyDir: {}
          env:
#            - name: KAFKA_CFG_ADVERTISED_LISTENERS
#              value: "INTERNAL://:9092,EXTERNAL://${MINIKUBE_IP}:${KAFKA_NODEPORT_0}"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "INTERNAL://:9092"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: "zookeeper-service:2181/${zk_node}"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_CFG_LISTENERS
              value: "INTERNAL://:9092,EXTERNAL://:30091"
#            - name: KAFKA_CFG_LISTENERS
#              value: "INTERNAL://:9092"
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: "INTERNAL"

  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-d-1
  labels:
    app: kafka
spec:
  serviceName: kafka-1
  replicas: 1
  selector:
    matchLabels:
      app: kafka
      run: kafka-1
  template:
    metadata:
      labels:
        app: kafka
        run: kafka-1
    spec:
      terminationGracePeriodSeconds: 10
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - kafka
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: kafka-container
          image: 'bitnami/kafka:latest'
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 30092
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka/data
          env:
#            - name: KAFKA_CFG_ADVERTISED_LISTENERS
#              value: "INTERNAL://:9092,EXTERNAL://${MINIKUBE_IP}:${KAFKA_NODEPORT_1}
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "INTERNAL://:9092"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: "zookeeper-service:2181/${zk_node}"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
#            - name: KAFKA_CFG_LISTENERS
#              value: "INTERNAL://:9092,EXTERNAL://:${KAFKA_NODEPORT_1}"
            - name: KAFKA_CFG_LISTENERS
              value: "INTERNAL://:9092,EXTERNAL://:30092"
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: "INTERNAL"
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-d-2
  labels:
    app: kafka
spec:
  serviceName: kafka-2
  replicas: 1
  selector:
    matchLabels:
      app: kafka
      run: kafka-2
  template:
    metadata:
      labels:
        app: kafka
        run: kafka-2
    spec:
      terminationGracePeriodSeconds: 10
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - kafka
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: kafka-container
          image: 'bitnami/kafka:latest'
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 30093
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka/data
          env:
#            - name: KAFKA_CFG_ADVERTISED_LISTENERS
#              value: "INTERNAL://:9092,EXTERNAL://${MINIKUBE_IP}:${KAFKA_NODEPORT_2}"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "INTERNAL://:9092"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: "zookeeper-service:2181/${zk_node}"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
#            - name: KAFKA_CFG_LISTENERS
#              value: "INTERNAL://:9092,EXTERNAL://:${KAFKA_NODEPORT_2}"
            - name: KAFKA_CFG_LISTENERS
              value: "INTERNAL://:9092,EXTERNAL://:30093"
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: "INTERNAL"
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi