spring:
  profiles:
    active: dev
  kafka:
#    bootstrapAddress: localhost:9092
    bootstrap-servers: ["kafka-2.default.svc.cluster.local:9092"]
    producer:
      bootstrap-servers: ["kafka-2.default.svc.cluster.local:9092"]
      key-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      bootstrap-servers: ["kafka-2.default.svc.cluster.local:9092"]
      key-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      properties:
        spring:
          json:
            trusted:
              packages: '*'

#  braintree:
#    ENVIRONMENT: sandbox
#    MERCHANT_ID: bmznvgn95hzt489m
#    PUBLIC_KEY: hhvygtzhtqjfcn8b
#    PRIVATE_KEY: fdd8cab61b3a4760cc3e3523ec356ad2


  application:
    name: payment-service
  data:
    mongodb:
      host: '${MONGO_HOST}'
      database: '${MONGO_DB}'
      port: 27017
      username: '${MONGO_USERNAME}'
      password: '${MONGO_PASSWORD}'
  cloud:
    kubernetes:
      discovery:
        register: true
      secrets:
        name: mongo-secret

      config:
        enabled: true
        sources:
          - namespace: default
            name: mongo-conf
      reload:
        enabled: true
        mode: polling
        period: 1000 #periodically run for each 1000 ms
management:
  endpoint:
    restart:
      enabled: true
    health:
      enabled: true
    info:
      enabled: true